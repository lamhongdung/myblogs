package com.ez.myblogsbackend.entity;

import lombok.*;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import javax.persistence.*;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Size;
import java.io.Serializable;
import java.util.Date;

@AllArgsConstructor
@NoArgsConstructor
@ToString
@Getter
@Setter
@Entity
@Table(name = "post")
public class Post implements Serializable {

    @Id
    // GenerationType.IDENTITY: id is generated by mySQL
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long postid;

    @Size(min = 1, message = "Please input a title")
    private String title;

    @Min(value = 1, message = "Value of category id must be greater than or equal to 1")
    private long categoryid;

    @Min(value = 1, message = "Value of creator id must be greater than or equal to 1")
    private long creatorid;

    // postStatusid:
    // - 1: Published
    @Min(value = 1, message = "Value of post status id must be 1")
    @Max(value = 1, message = "Value of post status id must be 1")
    // note: we cannot use @Pattern to validate because this @Pattern only apply for string,
    // datatype of postStatusid is 'long', so we cannot use @Pattern
    private long postStatusid;

    @Size(min = 1, message = "Please input a content")
    private String content;

    // post is created on this datetime
    @CreationTimestamp
    private Date createDatetime;

    // last date time post is updated
    @UpdateTimestamp
    private Date lastUpdateDatetime;

    public Post(String title,
                long categoryid,
                long creatorid,
                long postStatusid,
                String content) {

        this.title = title;
        this.categoryid = categoryid;
        this.creatorid = creatorid;
        this.postStatusid = postStatusid;
        this.content = content;

    }

}
